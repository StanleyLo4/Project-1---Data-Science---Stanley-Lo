[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Stanley Lo",
    "section": "",
    "text": "This is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "Plots-Project1.html",
    "href": "Plots-Project1.html",
    "title": "Global Seafood Production & NFL Weekly Attendance Analysis",
    "section": "",
    "text": "This analysis explores the global seafood production dataset provided by TidyTuesday and we can see the trends in seafood production through time.\nFrom the plot, we see that global seafood production has increased steadily into the 2000s and since then, has leveled off and is staying consistently high probably due to controls on overfishing.\nCitation: https://ourworldindata.org/fish-and-overfishing\nThis analysis looks at the NFL attendance trends provided by TidyTuesday.\nFrom the plot, we can see that weekly attendance since 2000 for NFL games has stayed relatively constant with the median weekly attendance staying high through 2019.\nCitation: https://www.pro-football-reference.com/years/2018/attendance.htm\n\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nseafood &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2021/2021-10-12/seafood-and-fish-production-thousand-tonnes.csv')\n\nRows: 10326 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): Entity, Code\ndbl (8): Year, Commodity Balances - Livestock and Fish Primary Equivalent - ...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nggplot(seafood, aes(x = Year, y = `Commodity Balances - Livestock and Fish Primary Equivalent - Pelagic Fish - 2763 - Production - 5510 - tonnes`)) +\n  geom_line() +\n  labs(title = \"Global Seafood Production Over   Time\", x = \"Year\", y = \"Production (tonnes)\")\n\nWarning: Removed 3 rows containing missing values or values outside the scale range\n(`geom_line()`).\n\n\n\n\n\n\n\n\n\n\nlibrary(tidyverse)\nnfl_attendance &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2020/2020-02-04/attendance.csv')\n\nRows: 10846 Columns: 8\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): team, team_name\ndbl (6): year, total, home, away, week, weekly_attendance\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nggplot(nfl_attendance, aes(x = year, y = weekly_attendance)) +\n  geom_boxplot(aes(group = year), fill = \"blue\", alpha = 0.7) + labs(title = \"NFL Weekly Attendance by Year\", x = \"Year\", \n  y = \"Weekly Attendance\")\n\nWarning: Removed 638 rows containing non-finite outside the scale range\n(`stat_boxplot()`)."
  },
  {
    "objectID": "Friends-Character-Data.html",
    "href": "Friends-Character-Data.html",
    "title": "Who Asks the Most Questions in Friends?",
    "section": "",
    "text": "Questions of Interest: “How do questions change throughout the seasons of Friends, and which characters ask the most questions?”\n\nlibrary(friends)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(stringr)\nlibrary(ggplot2)\ndata(friends)\n\nfriends &lt;- friends |&gt;\nmutate(word_count = str_count(text, \"\\\\w+\"), \nfirst_word = str_extract(text, \"^\\\\w+\"),\nends_with_question_mark = str_detect(text, \"\\\\?$\"))\n\n\nquestion_words &lt;- \"Who|What|When|Where|Why|How\"\nfriends &lt;- friends |&gt;\nmutate(starts_with_question_word = str_detect(text,  str_c(\"^(\", question_words, \")\\\\b\")),\ncontains_question_word = str_detect(text, str_c(\"\\\\b(\", question_words, \")\\\\b\")),\nquestion_word_count = str_count(text, str_c(\"\\\\b(\", question_words, \")\\\\b\")))\n\nfriends &lt;- friends |&gt;\nmutate(complex_question = str_detect(text, str_c(\"^(?!(\", question_words, \")\\\\b).*\\\\?$\")))\n\n\nseason_questions &lt;- friends |&gt;\ngroup_by(season) |&gt;\nsummarise(question_ratio = mean(ends_with_question_mark),\ncomplex_question_ratio = mean(complex_question))\n\n\nggplot(season_questions, aes(x = season)) +\ngeom_line(aes(y = question_ratio, color = \"All Questions\")) +\ngeom_line(aes(y = complex_question_ratio, color = \"Complex Questions\")) + labs(title = \"Question Usage Throughout Friends Seasons\", x = \"Season\", y = \"Proportion of Lines\", color = \"Question Type\")\n\n\n\n\n\n\n\n\nThis graph shows how question usage is changing throughout the multiple seasons of the show Friends. We see that all questions asked are stable but a slight dip in the proportion of lines dedicated to questions in the middle of the graph. At the same time, complex questions took a hit as well but since the proportional difference is only around 0.04, it is not a significant drop in questions being asked in the show Friends.\n\nmain_characters &lt;- c(\"Monica Geller\", \"Rachel Green\", \"Phoebe Buffay\", \"Chandler Bing\", \"Joey Tribbiani\", \"Ross Geller\")\n\ncharacter_questions &lt;- friends |&gt;\nfilter(speaker %in% main_characters) |&gt;\ngroup_by(speaker) |&gt;\nsummarise(question_ratio = mean(ends_with_question_mark),\nquestion_word_ratio = mean(contains_question_word),\ntotal_lines = n()) |&gt;\narrange(desc(question_ratio))\n\n\nggplot(character_questions, aes(x = speaker, y = question_ratio)) + geom_bar(stat = \"identity\", fill = \"blue\") + labs(title = \"Proportion of Questions Asked by Main Characters\", x = \"Character\", y = \"Proportion of Lines Ending with Question Mark\")\n\n\n\n\n\n\n\n\nFrom our analysis of characters and the questions they ask. We see that Monica seems to be the character that asks the most questions with around 24% of her lines being QUESTIONS which is insane. Besides that, the rest of the characters also have similar rates of asking questions with everyone except Phoebe having a proportion of lines ending with question marks above 20%. Because Monica is asking the most questions, we see that Monica is possibly also questioning the decisions of her Friends much more than the others. This could show the differentiated strategy in which the directors are trying to develop the personalities of each character.\nCITATIONS:\nhttps://github.com/EmilHvitfeldt/friends\nCharacter Mining Project: https://www.emorynlp.org/#"
  }
]